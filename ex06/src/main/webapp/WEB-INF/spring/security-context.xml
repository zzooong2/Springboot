<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>
<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
<bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService" />

<!-- BcryptPasswordEncoder 사용으로 인한 주석처리 -->
<!-- <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder" /> --> 
<!-- BcryptPasswordEncoder 사용으로 인한 주석처리 -->

<security:http>

    <security:intercept-url pattern="/sample/all" access="permitAll"/>
    
    <security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
    
    <security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
    
    <!--  접근 제한에 걸리는 경우 리다이렉트 하는 방식으로 지정 <security:access-denied-handler error-page="/accessError"/>  --> 
    <security:access-denied-handler ref="customAccessDenied"/>
    
    <!-- 로그인 페이지 제작하여 사용 (특정 URI 지정) <security:form-login/>  -->
    <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />
    
    <!-- csrf 를 사용하여 토큰 생성 → 공격 및 해킹 방지  -->
    <!-- <security:csrf disabled="true" /> -->
    
    <!-- 로그아웃 처리 -->
    <security:logout logout-url="/customLogout" invalidate-session="true" />
    
    <!-- 로그인 상태 유지 설정(데이터베이스 이용) -->
    <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
    
    <!-- 로그인 상태 유지중, 로그아웃 할 경우 remember-me 쿠키 삭제 설정 -->
    <security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me,JSESSION_ID" />
    
</security:http>

<security:authentication-manager>
  <security:authentication-provider user-service-ref="customUserDetailsService">
   
    <!-- 쿼리이용 인증을 위한 주석처리 -->
    <!-- <security:jdbc-user-service data-source-ref="dataSource" /> -->
    <!-- 쿼리이용 인증을 위한 주석처리 -->
    <!-- p.667 customUserDetailsService 사용 주석처리 -->  
    <!-- <security:jdbc-user-service data-source-ref="dataSource"
                                users-by-username-query="select userid , userpw , enabled from tbl_member where userid = ? "
                                authorities-by-username-query="select userid, auth from tbl_member_auth where userid = ? " /> -->
    <!-- p.667 customUserDetailsService 사용 주석처리 -->
    
    <security:password-encoder ref="bcryptPasswordEncoder" />
    
    <!-- BcryptPasswordEncoder 사용으로 인한 주석처리 -->
    <!-- <security:password-encoder ref="customPasswordEncoder" /> -->
    <!-- BcryptPasswordEncoder 사용으로 인한 주석처리 -->
    
  </security:authentication-provider>
</security:authentication-manager>

</beans>
